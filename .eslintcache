[{"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\index.js":"1","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\reportWebVitals.js":"2","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\App.js":"3","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\Header.js":"4","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\TextxList.js":"5","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\context\\TextoState.js":"6","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\context\\TextosContext.js":"7","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\types\\index.js":"8","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\context\\TextosReducer.js":"9","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\api\\axios.js":"10","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\Text.js":"11","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\Spinner.js":"12","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\helpers\\index.js":"13","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\ModalInformacion.js":"14","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\BotonCargarMas.js":"15","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\serviceWorker.js":"16"},{"size":582,"mtime":1612744300896,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":879,"mtime":1612741591087,"results":"20","hashOfConfig":"18"},{"size":919,"mtime":1612051893126,"results":"21","hashOfConfig":"18"},{"size":925,"mtime":1612741526397,"results":"22","hashOfConfig":"18"},{"size":3170,"mtime":1612739438675,"results":"23","hashOfConfig":"18"},{"size":109,"mtime":1611884457295,"results":"24","hashOfConfig":"18"},{"size":284,"mtime":1612732792384,"results":"25","hashOfConfig":"18"},{"size":1517,"mtime":1612739978260,"results":"26","hashOfConfig":"18"},{"size":149,"mtime":1611883548664,"results":"27","hashOfConfig":"18"},{"size":1331,"mtime":1612726330129,"results":"28","hashOfConfig":"18"},{"size":576,"mtime":1612050717175,"results":"29","hashOfConfig":"18"},{"size":889,"mtime":1612738426378,"results":"30","hashOfConfig":"18"},{"size":1924,"mtime":1612726438888,"results":"31","hashOfConfig":"18"},{"size":1498,"mtime":1612742086155,"results":"32","hashOfConfig":"18"},{"size":5026,"mtime":1612744210131,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ildqcl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\index.js",[],["71","72"],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\reportWebVitals.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\App.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\Header.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\TextxList.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\context\\TextoState.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\context\\TextosContext.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\types\\index.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\context\\TextosReducer.js",["73"],"import { \r\n    GET_TEXTS,\r\n    GET_TEXTDETAIL,\r\n    LOADING_TEXTS,\r\n    CLOSE_MODAL,\r\n    ERROR_GET_TEXT,\r\n    SET_INFO_PAGES\r\n } from '../types/index.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_TEXTS:\r\n            return {\r\n                ...state,\r\n                texts:  action.payload,\r\n                textDetail: null,\r\n                loadingtext: false,\r\n                openModalInfo: false,\r\n            }\r\n\r\n        case GET_TEXTDETAIL:\r\n            return {\r\n                ...state,\r\n                textDetail: action.payload,\r\n                openModalInfo: true,\r\n                loadingtext: false,\r\n            }\r\n\r\n        case LOADING_TEXTS:\r\n            return {\r\n                ...state,\r\n                loadingtext: action.payload\r\n            }\r\n\r\n        case CLOSE_MODAL:\r\n            return {\r\n                ...state,\r\n                openModalInfo: action.payload,\r\n                textDetail: null,\r\n            }\r\n        case ERROR_GET_TEXT:\r\n            return {\r\n                ...state,\r\n                errorgettext: true,\r\n                texts: [],\r\n                textDetail: null,\r\n                loadingtext: false,\r\n            }\r\n        case SET_INFO_PAGES:\r\n            return {\r\n                ...state,\r\n                paginaactual: Number(action.payload.current),\r\n                totalpaginas: Number(action.payload.pages)\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\api\\axios.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\Text.js",["74","75"],"import React, {useContext} from 'react';\r\n\r\nimport { obtenerVistaPreviaTexto } from  '../helpers'\r\n\r\n//importamos en context de listados de textos\r\nimport TextContext from '../context/TextosContext'\r\n\r\nconst Text = ({text}) => {\r\n\r\n    const textContext = useContext(TextContext);\r\n    const { getTextDetail } = textContext;\r\n    return ( \r\n        <div className=\"news-card\">\r\n            <a href=\"#\" className=\"news-card__card-link\"></a><img src={text.image} alt={text.title} className=\"news-card__image\" />\r\n            <div className=\"news-card__text-wrapper\">\r\n                <h2 className=\"news-card__title\">{text.title}</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 news-card__post-date text-left\">{text.author}</div>\r\n                    <div className=\"col-6 news-card__post-date text-right\">{text.genero}</div>\r\n                </div>\r\n                <div className=\"news-card__details\">\r\n                    <p className=\"news-card__excerpt\">{obtenerVistaPreviaTexto(text.texto)}</p>\r\n                    <button className=\"news-card__read-more\" href=\"!#\" onClick={() => getTextDetail(text._id)}>Leer mas <i className=\"fas fa-long-arrow-alt-right\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Text;","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\Spinner.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\helpers\\index.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\ModalInformacion.js",[],"C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\components\\BotonCargarMas.js",["76"],"import React, {useState, useContext} from 'react';\r\nimport './botonCargarMas.css'\r\n\r\n//importamos en context de listados de textos\r\nimport TextContext from '../context/TextosContext'\r\nconst BotonCargar = () => {\r\n\r\n    const textContext = useContext(TextContext);\r\n    const { paginaactual, totalpaginas, getText, ShowSpinner, loadingtext } = textContext;\r\n\r\n    const [incrementarpaginaactual, guardarIncrementarPaginaActual] = useState(paginaactual);\r\n\r\n    if(incrementarpaginaactual === totalpaginas) return null;\r\n\r\n    const BotonCargarMas = () => {\r\n        var Pagina = paginaactual;\r\n        Pagina = Pagina+1;\r\n        ShowSpinner(true);\r\n        getText(Pagina);\r\n    }\r\n\r\n    const BotonCargarMenos = () => {\r\n        var Pagina = paginaactual;\r\n        Pagina = Pagina-1;\r\n        ShowSpinner(true);\r\n        getText(Pagina);\r\n    }\r\n\r\n    if(loadingtext) return null;\r\n\r\n    return ( \r\n            <div className=\"col-md-12 text-center p-5\">\r\n             {(paginaactual === 1) ? null : (\r\n                <button onClick={BotonCargarMenos} type=\"button\" className=\"btn btn-primary btn-circle btn-md\" title=\"Anterior\"><i className=\"fas fa-arrow-circle-left\"></i></button>)}\r\n                {(paginaactual === totalpaginas) ? null : (\r\n                <button onClick={BotonCargarMas} type=\"button\" className=\"btn btn-primary btn-circle btn-md\" title=\"Siguiente\"><i className=\"fas fa-arrow-circle-right\"></i></button> )}\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default BotonCargar;","C:\\Users\\Desarrollo\\Documents\\proyecto_personal\\textmiracles\\src\\serviceWorker.js",["77"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  \n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    // if (publicUrl.origin !== window.location.origin) {\n    //   // Our service worker won't work if PUBLIC_URL is on a different origin\n    //   // from what our page is served on. This might happen if a CDN is used to\n    //   // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    //   return;\n    // }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/serviceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  \n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":10,"column":1,"nodeType":"84","endLine":60,"endColumn":2},{"ruleId":"85","severity":1,"message":"86","line":14,"column":13,"nodeType":"87","endLine":14,"endColumn":58},{"ruleId":"88","severity":1,"message":"89","line":14,"column":13,"nodeType":"87","endLine":14,"endColumn":58},{"ruleId":"90","severity":1,"message":"91","line":11,"column":37,"nodeType":"92","messageId":"93","endLine":11,"endColumn":67},{"ruleId":"90","severity":1,"message":"94","line":26,"column":11,"nodeType":"92","messageId":"93","endLine":26,"endColumn":20},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'guardarIncrementarPaginaActual' is assigned a value but never used.","Identifier","unusedVar","'publicUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]